{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getMessaging, getToken } from \"firebase/messaging\";\nimport { getFunctions } from 'firebase/functions';\nimport { toast } from 'react-toastify'; // 1. Importa toast\n\n// Configuración de Firebase (leyendo de .env)\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\n// Inicialización de servicios\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const messaging = getMessaging(app);\nexport const db = getFirestore(app);\nexport const functions = getFunctions(app, 'us-central1');\n\n// --- INICIO DE LÓGICA DE TIMEOUT (PLAN B) ---\n\n// 2. Función de ayuda que crea una promesa de \"timeout\"\nconst createTimeout = (ms, message) => {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error(message));\n    }, ms);\n  });\n};\n\n// 3. Función real de registro (la que se trababa)\nasync function registerAndGetToken() {\n  const permission = await Notification.requestPermission();\n  if (permission !== \"granted\") {\n    console.log(\"Permiso de notificación denegado.\");\n    return {\n      success: false,\n      token: null\n    };\n  }\n  const swPath = \"/duca/firebase-messaging-sw.js\";\n  const scope = \"/duca/\";\n  await navigator.serviceWorker.register(swPath, {\n    scope: scope\n  });\n  console.log(\"Esperando a que el Service Worker esté 'listo'...\");\n  // Esta es la línea que se traba:\n  const registration = await navigator.serviceWorker.ready;\n  console.log(\"Service Worker está 'listo':\", registration);\n  const vapidKey = process.env.REACT_APP_VAPID_KEY;\n  if (!vapidKey) {\n    console.error(\"Error: REACT_APP_VAPID_KEY no definida en .env\");\n    return {\n      success: false,\n      token: null\n    };\n  }\n  console.log(\"Intentando obtener token...\");\n  const fcmToken = await getToken(messaging, {\n    serviceWorkerRegistration: registration,\n    vapidKey: vapidKey\n  });\n  if (fcmToken) {\n    localStorage.setItem(\"fcmToken\", fcmToken);\n    return {\n      success: true,\n      token: fcmToken\n    };\n  } else {\n    console.log(\"No se pudo generar el token.\");\n    return {\n      success: false,\n      token: null\n    };\n  }\n}\n\n// 4. Función exportada que USA la carrera (Promise.race)\nexport const generateToken = async () => {\n  try {\n    // Ejecuta la función real y el temporizador al mismo tiempo\n    const result = await Promise.race([registerAndGetToken(), createTimeout(10000, 'El registro del Service Worker tardó demasiado (10s).') // Temporizador de 5 segundos\n    ]);\n    return result; // Devuelve el resultado si 'registerAndGetToken' gana\n  } catch (error) {\n    // Esto se ejecuta si el TEMPORIZADOR de 5 segundos gana\n    console.error(\"Error detallado al generar el token (Timeout):\", error.message);\n\n    // 5. ¡TU LÓGICA!\n    toast.error(\"Error al activar notificaciones. Inténtalo de nuevo.\");\n\n    // Espera 2 segundos para que se vea el toast y recarga\n    setTimeout(() => window.location.reload(), 6000);\n    return {\n      success: false,\n      token: null\n    };\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getMessaging","getToken","getFunctions","toast","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","messaging","db","functions","createTimeout","ms","message","Promise","_","reject","setTimeout","Error","registerAndGetToken","permission","Notification","requestPermission","console","log","success","token","swPath","scope","navigator","serviceWorker","register","registration","ready","vapidKey","REACT_APP_VAPID_KEY","error","fcmToken","serviceWorkerRegistration","localStorage","setItem","generateToken","result","race","window","location","reload"],"sources":["C:/Users/diego/OneDrive/Escritorio/CampusGo/src/firebase/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getMessaging, getToken } from \"firebase/messaging\";\r\nimport { getFunctions } from 'firebase/functions';\r\nimport { toast } from 'react-toastify'; // 1. Importa toast\r\n\r\n// Configuración de Firebase (leyendo de .env)\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\n// Inicialización de servicios\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const messaging = getMessaging(app);\r\nexport const db = getFirestore(app);\r\nexport const functions = getFunctions(app,'us-central1');\r\n\r\n// --- INICIO DE LÓGICA DE TIMEOUT (PLAN B) ---\r\n\r\n// 2. Función de ayuda que crea una promesa de \"timeout\"\r\nconst createTimeout = (ms, message) => {\r\n  return new Promise((_, reject) => {\r\n    setTimeout(() => {\r\n      reject(new Error(message));\r\n    }, ms);\r\n  });\r\n};\r\n\r\n// 3. Función real de registro (la que se trababa)\r\nasync function registerAndGetToken() {\r\n  const permission = await Notification.requestPermission();\r\n  if (permission !== \"granted\") {\r\n    console.log(\"Permiso de notificación denegado.\");\r\n    return { success: false, token: null };\r\n  }\r\n\r\n  const swPath = \"/duca/firebase-messaging-sw.js\";\r\n  const scope = \"/duca/\";\r\n  \r\n  await navigator.serviceWorker.register(swPath, { scope: scope });\r\n  \r\n  console.log(\"Esperando a que el Service Worker esté 'listo'...\");\r\n  // Esta es la línea que se traba:\r\n  const registration = await navigator.serviceWorker.ready; \r\n  \r\n  console.log(\"Service Worker está 'listo':\", registration);\r\n  const vapidKey = process.env.REACT_APP_VAPID_KEY;\r\n  if (!vapidKey) {\r\n      console.error(\"Error: REACT_APP_VAPID_KEY no definida en .env\");\r\n      return { success: false, token: null };\r\n  }\r\n\r\n  console.log(\"Intentando obtener token...\");\r\n  const fcmToken = await getToken(messaging, {\r\n    serviceWorkerRegistration: registration,\r\n    vapidKey: vapidKey, \r\n  });\r\n\r\n  if (fcmToken) {\r\n    localStorage.setItem(\"fcmToken\", fcmToken);\r\n    return { success: true, token: fcmToken };\r\n  } else {\r\n    console.log(\"No se pudo generar el token.\");\r\n    return { success: false, token: null };\r\n  }\r\n}\r\n\r\n// 4. Función exportada que USA la carrera (Promise.race)\r\nexport const generateToken = async () => {\r\n  try {\r\n    // Ejecuta la función real y el temporizador al mismo tiempo\r\n    const result = await Promise.race([\r\n      registerAndGetToken(),\r\n      createTimeout(10000, 'El registro del Service Worker tardó demasiado (10s).') // Temporizador de 5 segundos\r\n    ]);\r\n    \r\n    return result; // Devuelve el resultado si 'registerAndGetToken' gana\r\n\r\n  } catch (error) {\r\n    // Esto se ejecuta si el TEMPORIZADOR de 5 segundos gana\r\n    console.error(\"Error detallado al generar el token (Timeout):\", error.message);\r\n    \r\n    // 5. ¡TU LÓGICA!\r\n    toast.error(\"Error al activar notificaciones. Inténtalo de nuevo.\"); \r\n    \r\n    // Espera 2 segundos para que se vea el toast y recarga\r\n    setTimeout(() => window.location.reload(), 6000); \r\n\r\n    return { success: false, token: null };\r\n  }\r\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,EAAEC,QAAQ,QAAQ,oBAAoB;AAC3D,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,KAAK,QAAQ,gBAAgB,CAAC,CAAC;;AAExC;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,+BAA+B;EACxDC,SAAS,EAAEP,OAAO,CAACC,GAAG,CAACO,6BAA6B;EACpDC,aAAa,EAAET,OAAO,CAACC,GAAG,CAACS,iCAAiC;EAC5DC,iBAAiB,EAAEX,OAAO,CAACC,GAAG,CAACW,sCAAsC;EACrEC,KAAK,EAAEb,OAAO,CAACC,GAAG,CAACa,yBAAyB;EAC5CC,aAAa,EAAEf,OAAO,CAACC,GAAG,CAACe;AAC/B,CAAC;;AAED;AACA,MAAMC,GAAG,GAAG1B,aAAa,CAACO,cAAc,CAAC;AACzC,OAAO,MAAMoB,IAAI,GAAG1B,OAAO,CAACyB,GAAG,CAAC;AAChC,OAAO,MAAME,SAAS,GAAGzB,YAAY,CAACuB,GAAG,CAAC;AAC1C,OAAO,MAAMG,EAAE,GAAG3B,YAAY,CAACwB,GAAG,CAAC;AACnC,OAAO,MAAMI,SAAS,GAAGzB,YAAY,CAACqB,GAAG,EAAC,aAAa,CAAC;;AAExD;;AAEA;AACA,MAAMK,aAAa,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;EACrC,OAAO,IAAIC,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAK;IAChCC,UAAU,CAAC,MAAM;MACfD,MAAM,CAAC,IAAIE,KAAK,CAACL,OAAO,CAAC,CAAC;IAC5B,CAAC,EAAED,EAAE,CAAC;EACR,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,eAAeO,mBAAmBA,CAAA,EAAG;EACnC,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;EACzD,IAAIF,UAAU,KAAK,SAAS,EAAE;IAC5BG,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACxC;EAEA,MAAMC,MAAM,GAAG,gCAAgC;EAC/C,MAAMC,KAAK,GAAG,QAAQ;EAEtB,MAAMC,SAAS,CAACC,aAAa,CAACC,QAAQ,CAACJ,MAAM,EAAE;IAAEC,KAAK,EAAEA;EAAM,CAAC,CAAC;EAEhEL,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;EAChE;EACA,MAAMQ,YAAY,GAAG,MAAMH,SAAS,CAACC,aAAa,CAACG,KAAK;EAExDV,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEQ,YAAY,CAAC;EACzD,MAAME,QAAQ,GAAG7C,OAAO,CAACC,GAAG,CAAC6C,mBAAmB;EAChD,IAAI,CAACD,QAAQ,EAAE;IACXX,OAAO,CAACa,KAAK,CAAC,gDAAgD,CAAC;IAC/D,OAAO;MAAEX,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EAC1C;EAEAH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1C,MAAMa,QAAQ,GAAG,MAAMrD,QAAQ,CAACwB,SAAS,EAAE;IACzC8B,yBAAyB,EAAEN,YAAY;IACvCE,QAAQ,EAAEA;EACZ,CAAC,CAAC;EAEF,IAAIG,QAAQ,EAAE;IACZE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAC1C,OAAO;MAAEZ,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAEW;IAAS,CAAC;EAC3C,CAAC,MAAM;IACLd,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACxC;AACF;;AAEA;AACA,OAAO,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,MAAM5B,OAAO,CAAC6B,IAAI,CAAC,CAChCxB,mBAAmB,CAAC,CAAC,EACrBR,aAAa,CAAC,KAAK,EAAE,uDAAuD,CAAC,CAAC;IAAA,CAC/E,CAAC;IAEF,OAAO+B,MAAM,CAAC,CAAC;EAEjB,CAAC,CAAC,OAAON,KAAK,EAAE;IACd;IACAb,OAAO,CAACa,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAACvB,OAAO,CAAC;;IAE9E;IACA3B,KAAK,CAACkD,KAAK,CAAC,sDAAsD,CAAC;;IAEnE;IACAnB,UAAU,CAAC,MAAM2B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;IAEhD,OAAO;MAAErB,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}