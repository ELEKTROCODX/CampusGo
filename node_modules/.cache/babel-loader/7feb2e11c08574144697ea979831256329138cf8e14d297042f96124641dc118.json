{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getMessaging, getToken } from \"firebase/messaging\";\n\n// Accessing environment variables using process.env\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const messaging = getMessaging(app);\nexport const db = getFirestore(app);\nexport const generateToken = async () => {\n  const permission = await Notification.requestPermission();\n  console.log(\"Permiso de notificación:\", permission);\n  if (permission === \"granted\") {\n    try {\n      // 1. INTENTAR OBTENER UN REGISTRO ACTIVO\n      let registration = await navigator.serviceWorker.getRegistration('/');\n\n      // 2. SI NO HAY REGISTRO, INTENTAR REGISTRAR MANUALMENTE\n      if (!registration) {\n        console.log(\"No se encontró Service Worker, registrando manualmente...\");\n\n        // IMPORTANTE: Registrar el archivo que está en 'public/'\n        registration = await navigator.serviceWorker.register('/firebase-messaging-sw.js');\n\n        // Esperar a que el Service Worker se active\n        await new Promise(resolve => {\n          if (registration.active) {\n            resolve();\n          } else {\n            registration.addEventListener('activate', resolve);\n          }\n        });\n        console.log(\"Service Worker registrado y activo:\", registration);\n      }\n\n      // 3. AHORA QUE TENEMOS UN REGISTRO VÁLIDO, LLAMAMOS A getToken\n      const token = await getToken(messaging, {\n        vapidKey: process.env.REACT_APP_VAPID_KEY,\n        serviceWorkerRegistration: registration // Pasar el objeto ServiceWorkerRegistration\n      });\n      console.log(\"Token FCM generado:\", token);\n      localStorage.setItem('fcmToken', token);\n      return true;\n    } catch (error) {\n      console.error(\"Error al obtener el token:\", error);\n      // Capturamos cualquier error, incluyendo si el registro manual falla\n      return false;\n    }\n  } else {\n    console.warn(\"Permiso de notificación denegado.\");\n    return false;\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getMessaging","getToken","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","messaging","db","generateToken","permission","Notification","requestPermission","console","log","registration","navigator","serviceWorker","getRegistration","register","Promise","resolve","active","addEventListener","token","vapidKey","REACT_APP_VAPID_KEY","serviceWorkerRegistration","localStorage","setItem","error","warn"],"sources":["C:/Users/diego/OneDrive/Escritorio/CampusGo/src/firebase/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getMessaging, getToken } from \"firebase/messaging\";\r\n\r\n// Accessing environment variables using process.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const messaging = getMessaging(app);\r\nexport const db = getFirestore(app);\r\n\r\nexport const generateToken = async () => {\r\n    const permission = await Notification.requestPermission();\r\n    console.log(\"Permiso de notificación:\", permission);\r\n    \r\n    if(permission === \"granted\"){\r\n        try {\r\n            // 1. INTENTAR OBTENER UN REGISTRO ACTIVO\r\n            let registration = await navigator.serviceWorker.getRegistration('/');\r\n            \r\n            // 2. SI NO HAY REGISTRO, INTENTAR REGISTRAR MANUALMENTE\r\n            if (!registration) {\r\n                console.log(\"No se encontró Service Worker, registrando manualmente...\");\r\n                \r\n                // IMPORTANTE: Registrar el archivo que está en 'public/'\r\n                registration = await navigator.serviceWorker.register('/firebase-messaging-sw.js');\r\n                \r\n                // Esperar a que el Service Worker se active\r\n                await new Promise((resolve) => {\r\n                    if (registration.active) {\r\n                        resolve();\r\n                    } else {\r\n                        registration.addEventListener('activate', resolve);\r\n                    }\r\n                });\r\n                console.log(\"Service Worker registrado y activo:\", registration);\r\n            }\r\n\r\n            // 3. AHORA QUE TENEMOS UN REGISTRO VÁLIDO, LLAMAMOS A getToken\r\n            const token = await getToken(messaging, {\r\n                vapidKey: process.env.REACT_APP_VAPID_KEY,\r\n                serviceWorkerRegistration: registration // Pasar el objeto ServiceWorkerRegistration\r\n            });\r\n            \r\n            console.log(\"Token FCM generado:\", token);\r\n            localStorage.setItem('fcmToken', token); \r\n            return true;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener el token:\", error);\r\n            // Capturamos cualquier error, incluyendo si el registro manual falla\r\n            return false;\r\n        }\r\n    } else {\r\n        console.warn(\"Permiso de notificación denegado.\");\r\n        return false;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,EAAEC,QAAQ,QAAQ,oBAAoB;;AAE3D;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,+BAA+B;EACxDC,SAAS,EAAEP,OAAO,CAACC,GAAG,CAACO,6BAA6B;EACpDC,aAAa,EAAET,OAAO,CAACC,GAAG,CAACS,iCAAiC;EAC5DC,iBAAiB,EAAEX,OAAO,CAACC,GAAG,CAACW,sCAAsC;EACrEC,KAAK,EAAEb,OAAO,CAACC,GAAG,CAACa,yBAAyB;EAC5CC,aAAa,EAAEf,OAAO,CAACC,GAAG,CAACe;AAC/B,CAAC;AAED,MAAMC,GAAG,GAAGxB,aAAa,CAACK,cAAc,CAAC;AACzC,OAAO,MAAMoB,IAAI,GAAGxB,OAAO,CAACuB,GAAG,CAAC;AAChC,OAAO,MAAME,SAAS,GAAGvB,YAAY,CAACqB,GAAG,CAAC;AAC1C,OAAO,MAAMG,EAAE,GAAGzB,YAAY,CAACsB,GAAG,CAAC;AAEnC,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,UAAU,GAAG,MAAMC,YAAY,CAACC,iBAAiB,CAAC,CAAC;EACzDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,UAAU,CAAC;EAEnD,IAAGA,UAAU,KAAK,SAAS,EAAC;IACxB,IAAI;MACA;MACA,IAAIK,YAAY,GAAG,MAAMC,SAAS,CAACC,aAAa,CAACC,eAAe,CAAC,GAAG,CAAC;;MAErE;MACA,IAAI,CAACH,YAAY,EAAE;QACfF,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;;QAExE;QACAC,YAAY,GAAG,MAAMC,SAAS,CAACC,aAAa,CAACE,QAAQ,CAAC,2BAA2B,CAAC;;QAElF;QACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;UAC3B,IAAIN,YAAY,CAACO,MAAM,EAAE;YACrBD,OAAO,CAAC,CAAC;UACb,CAAC,MAAM;YACHN,YAAY,CAACQ,gBAAgB,CAAC,UAAU,EAAEF,OAAO,CAAC;UACtD;QACJ,CAAC,CAAC;QACFR,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEC,YAAY,CAAC;MACpE;;MAEA;MACA,MAAMS,KAAK,GAAG,MAAMvC,QAAQ,CAACsB,SAAS,EAAE;QACpCkB,QAAQ,EAAErC,OAAO,CAACC,GAAG,CAACqC,mBAAmB;QACzCC,yBAAyB,EAAEZ,YAAY,CAAC;MAC5C,CAAC,CAAC;MAEFF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEU,KAAK,CAAC;MACzCI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,KAAK,CAAC;MACvC,OAAO,IAAI;IACf,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;MACA,OAAO,KAAK;IAChB;EACJ,CAAC,MAAM;IACHjB,OAAO,CAACkB,IAAI,CAAC,mCAAmC,CAAC;IACjD,OAAO,KAAK;EAChB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}